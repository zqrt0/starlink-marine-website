'use client'

import { useState, useEffect } from 'react'

interface WeatherData {
  location: string
  temperature: number
  condition: string
  windSpeed: number
  windDirection: string
  waveHeight: number
  visibility: number
  pressure: number
  humidity: number
  icon: string
}

export default function WeatherWidget() {
  const [weatherData, setWeatherData] = useState<WeatherData | null>(null)
  const [isLoading, setIsLoading] = useState(true)
  const [selectedLocation, setSelectedLocation] = useState('baltic')

  const locations = [
    { value: 'baltic', label: '–ë–∞–ª—Ç–∏–π—Å–∫–æ–µ –º–æ—Ä–µ', coordinates: '59.9, 30.3' },
    { value: 'black', label: '–ß–µ—Ä–Ω–æ–µ –º–æ—Ä–µ', coordinates: '44.6, 37.8' },
    { value: 'white', label: '–ë–µ–ª–æ–µ –º–æ—Ä–µ', coordinates: '64.5, 40.5' },
    { value: 'barents', label: '–ë–∞—Ä–µ–Ω—Ü–µ–≤–æ –º–æ—Ä–µ', coordinates: '69.0, 33.0' }
  ]

  const getWeatherIcon = (condition: string) => {
    const conditions = condition.toLowerCase()
    if (conditions.includes('—è—Å–Ω–æ') || conditions.includes('—Å–æ–ª–Ω–µ—á–Ω–æ')) return '‚òÄÔ∏è'
    if (conditions.includes('–æ–±–ª–∞—á–Ω–æ')) return '‚òÅÔ∏è'
    if (conditions.includes('–¥–æ–∂–¥—å')) return 'üåßÔ∏è'
    if (conditions.includes('—Å–Ω–µ–≥')) return '‚ùÑÔ∏è'
    if (conditions.includes('—Ç—É–º–∞–Ω')) return 'üå´Ô∏è'
    if (conditions.includes('—à—Ç–æ—Ä–º')) return '‚õàÔ∏è'
    return 'üå§Ô∏è'
  }

  const getWindDirection = (degrees: number) => {
    const directions = ['–°', '–°–í', '–í', '–Æ–í', '–Æ', '–Æ–ó', '–ó', '–°–ó']
    const index = Math.round(degrees / 45) % 8
    return directions[index]
  }

  const getWaveHeight = (windSpeed: number) => {
    // –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Ñ–æ—Ä–º—É–ª–∞ –¥–ª—è –≤—ã—Å–æ—Ç—ã –≤–æ–ª–Ω
    if (windSpeed < 5) return 0.2
    if (windSpeed < 10) return 0.5
    if (windSpeed < 15) return 1.0
    if (windSpeed < 20) return 1.5
    if (windSpeed < 25) return 2.0
    return 2.5
  }

  const getVisibility = (condition: string) => {
    const conditions = condition.toLowerCase()
    if (conditions.includes('—Ç—É–º–∞–Ω')) return 0.5
    if (conditions.includes('–¥–æ–∂–¥—å')) return 2.0
    if (conditions.includes('—Å–Ω–µ–≥')) return 1.0
    return 10.0
  }

  useEffect(() => {
    const fetchWeatherData = async () => {
      setIsLoading(true)
      
      // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
      setTimeout(() => {
        const location = locations.find(l => l.value === selectedLocation)
        const windSpeed = Math.random() * 20 + 5
        const windDirection = Math.random() * 360
        const temperature = Math.random() * 15 + 5 // 5-20¬∞C
        
        const conditions = [
          '–Ø—Å–Ω–æ', '–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å', '–û–±–ª–∞—á–Ω–æ', 
          '–î–æ–∂–¥—å', '–¢—É–º–∞–Ω', '–®—Ç–æ—Ä–º'
        ]
        const condition = conditions[Math.floor(Math.random() * conditions.length)]
        
        setWeatherData({
          location: location?.label || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ',
          temperature: Math.round(temperature),
          condition,
          windSpeed: Math.round(windSpeed),
          windDirection: getWindDirection(windDirection),
          waveHeight: getWaveHeight(windSpeed),
          visibility: getVisibility(condition),
          pressure: Math.round(1013 + Math.random() * 20 - 10),
          humidity: Math.round(60 + Math.random() * 30),
          icon: getWeatherIcon(condition)
        })
        
        setIsLoading(false)
      }, 1000)
    }

    fetchWeatherData()
  }, [selectedLocation])

  const getConditionColor = (condition: string) => {
    const conditions = condition.toLowerCase()
    if (conditions.includes('—è—Å–Ω–æ')) return 'text-yellow-500'
    if (conditions.includes('–æ–±–ª–∞—á–Ω–æ')) return 'text-gray-500'
    if (conditions.includes('–¥–æ–∂–¥—å')) return 'text-blue-500'
    if (conditions.includes('—à—Ç–æ—Ä–º')) return 'text-red-500'
    return 'text-gray-600'
  }

  const getStarlinkStatus = (condition: string, windSpeed: number) => {
    if (condition.toLowerCase().includes('—à—Ç–æ—Ä–º') && windSpeed > 20) {
      return { status: 'warning', text: '–í–æ–∑–º–æ–∂–Ω—ã –∫—Ä–∞—Ç–∫–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–±–æ–∏' }
    }
    if (windSpeed > 15) {
      return { status: 'info', text: '–°—Ç–∞–±–∏–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞' }
    }
    return { status: 'success', text: '–û—Ç–ª–∏—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è' }
  }

  return (
    <section className="section-padding bg-gradient-to-br from-blue-50 to-indigo-100">
      <div className="container-max">
        <div className="text-center mb-12">
          <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
            –ú–æ—Ä—Å–∫–∞—è –ø–æ–≥–æ–¥–∞ –∏ —É—Å–ª–æ–≤–∏—è –¥–ª—è Starlink
          </h2>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            –ê–∫—Ç—É–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö –≤ –º–æ—Ä—Å–∫–∏—Ö —Ä–µ–≥–∏–æ–Ω–∞—Ö –†–æ—Å—Å–∏–∏
          </p>
        </div>

        <div className="max-w-4xl mx-auto">
          {/* –í—ã–±–æ—Ä –ª–æ–∫–∞—Ü–∏–∏ */}
          <div className="flex flex-wrap justify-center gap-3 mb-8">
            {locations.map((location) => (
              <button
                key={location.value}
                onClick={() => setSelectedLocation(location.value)}
                className={`px-4 py-2 rounded-full font-medium transition-colors ${
                  selectedLocation === location.value
                    ? 'bg-marine-600 text-white'
                    : 'bg-white text-gray-700 hover:bg-gray-100 border border-gray-200'
                }`}
              >
                {location.label}
              </button>
            ))}
          </div>

          {/* –í–∏–¥–∂–µ—Ç –ø–æ–≥–æ–¥—ã */}
          <div className="bg-white rounded-2xl shadow-lg overflow-hidden">
            {isLoading ? (
              <div className="p-12 text-center">
                <div className="inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-marine-600 mb-4"></div>
                <p className="text-gray-600">–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ...</p>
              </div>
            ) : weatherData ? (
              <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 p-8">
                {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                <div className="space-y-6">
                  <div className="text-center">
                    <h3 className="text-2xl font-bold text-gray-900 mb-2">
                      {weatherData.location}
                    </h3>
                    <div className="flex items-center justify-center space-x-4">
                      <span className="text-6xl">{weatherData.icon}</span>
                      <div>
                        <div className="text-4xl font-bold text-gray-900">
                          {weatherData.temperature}¬∞C
                        </div>
                        <div className={`text-lg font-medium ${getConditionColor(weatherData.condition)}`}>
                          {weatherData.condition}
                        </div>
                      </div>
                    </div>
                  </div>

                  {/* –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                  <div className="grid grid-cols-2 gap-4">
                    <div className="bg-gray-50 rounded-lg p-4 text-center">
                      <div className="text-2xl font-bold text-gray-900">
                        {weatherData.windSpeed}
                      </div>
                      <div className="text-sm text-gray-600">–º/—Å</div>
                      <div className="text-xs text-gray-500">
                        {weatherData.windDirection}
                      </div>
                    </div>

                    <div className="bg-gray-50 rounded-lg p-4 text-center">
                      <div className="text-2xl font-bold text-gray-900">
                        {weatherData.waveHeight}
                      </div>
                      <div className="text-sm text-gray-600">–º</div>
                      <div className="text-xs text-gray-500">–≤—ã—Å–æ—Ç–∞ –≤–æ–ª–Ω</div>
                    </div>

                    <div className="bg-gray-50 rounded-lg p-4 text-center">
                      <div className="text-2xl font-bold text-gray-900">
                        {weatherData.visibility}
                      </div>
                      <div className="text-sm text-gray-600">–∫–º</div>
                      <div className="text-xs text-gray-500">–≤–∏–¥–∏–º–æ—Å—Ç—å</div>
                    </div>

                    <div className="bg-gray-50 rounded-lg p-4 text-center">
                      <div className="text-2xl font-bold text-gray-900">
                        {weatherData.pressure}
                      </div>
                      <div className="text-sm text-gray-600">–≥–ü–∞</div>
                      <div className="text-xs text-gray-500">–¥–∞–≤–ª–µ–Ω–∏–µ</div>
                    </div>
                  </div>
                </div>

                {/* –°—Ç–∞—Ç—É—Å Starlink */}
                <div className="space-y-6">
                  <div className="text-center">
                    <h4 className="text-xl font-bold text-gray-900 mb-4">
                      –°—Ç–∞—Ç—É—Å Starlink
                    </h4>
                    
                    {(() => {
                      const starlinkStatus = getStarlinkStatus(weatherData.condition, weatherData.windSpeed)
                      return (
                        <div className={`p-6 rounded-lg ${
                          starlinkStatus.status === 'success' ? 'bg-green-50 border border-green-200' :
                          starlinkStatus.status === 'warning' ? 'bg-yellow-50 border border-yellow-200' :
                          'bg-blue-50 border border-blue-200'
                        }`}>
                          <div className={`text-4xl mb-3 ${
                            starlinkStatus.status === 'success' ? 'text-green-500' :
                            starlinkStatus.status === 'warning' ? 'text-yellow-500' :
                            'text-blue-500'
                          }`}>
                            {starlinkStatus.status === 'success' ? '‚úÖ' :
                             starlinkStatus.status === 'warning' ? '‚ö†Ô∏è' : '‚ÑπÔ∏è'}
                          </div>
                          <p className={`font-semibold ${
                            starlinkStatus.status === 'success' ? 'text-green-800' :
                            starlinkStatus.status === 'warning' ? 'text-yellow-800' :
                            'text-blue-800'
                          }`}>
                            {starlinkStatus.text}
                          </p>
                        </div>
                      )
                    })()}
                  </div>

                  {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
                  <div className="bg-marine-50 rounded-lg p-6">
                    <h5 className="font-semibold text-gray-900 mb-3">
                      –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —Å—É–¥–æ–≤–æ–∂–¥–µ–Ω–∏—è:
                    </h5>
                    <ul className="space-y-2 text-sm text-gray-700">
                      {weatherData.windSpeed > 15 && (
                        <li className="flex items-start space-x-2">
                          <span className="text-yellow-500 mt-0.5">‚ö†Ô∏è</span>
                          <span>–°–∏–ª—å–Ω—ã–π –≤–µ—Ç–µ—Ä - –±—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã –ø—Ä–∏ –º–∞–Ω–µ–≤—Ä–∏—Ä–æ–≤–∞–Ω–∏–∏</span>
                        </li>
                      )}
                      {weatherData.waveHeight > 1.5 && (
                        <li className="flex items-start space-x-2">
                          <span className="text-orange-500 mt-0.5">üåä</span>
                          <span>–í—ã—Å–æ–∫–∏–µ –≤–æ–ª–Ω—ã - —Å–Ω–∏–∑—å—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å</span>
                        </li>
                      )}
                      {weatherData.visibility < 2 && (
                        <li className="flex items-start space-x-2">
                          <span className="text-red-500 mt-0.5">üå´Ô∏è</span>
                          <span>–ü–ª–æ—Ö–∞—è –≤–∏–¥–∏–º–æ—Å—Ç—å - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–¥–∞—Ä</span>
                        </li>
                      )}
                      <li className="flex items-start space-x-2">
                        <span className="text-green-500 mt-0.5">üì°</span>
                        <span>Starlink —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ –≤ —Ç–µ–∫—É—â–∏—Ö —É—Å–ª–æ–≤–∏—è—Ö</span>
                      </li>
                    </ul>
                  </div>

                  {/* –ü—Ä–æ–≥–Ω–æ–∑ */}
                  <div className="bg-white border border-gray-200 rounded-lg p-4">
                    <h5 className="font-semibold text-gray-900 mb-3">
                      –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 24 —á–∞—Å–∞:
                    </h5>
                    <div className="space-y-2 text-sm">
                      <div className="flex justify-between">
                        <span className="text-gray-600">–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</span>
                        <span className="font-medium">{weatherData.temperature}¬∞C ‚Üí {weatherData.temperature + Math.round(Math.random() * 4 - 2)}¬∞C</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-gray-600">–í–µ—Ç–µ—Ä:</span>
                        <span className="font-medium">{weatherData.windSpeed} –º/—Å ‚Üí {Math.round(weatherData.windSpeed + Math.random() * 6 - 3)} –º/—Å</span>
                      </div>
                      <div className="flex justify-between">
                        <span className="text-gray-600">–í–æ–ª–Ω—ã:</span>
                        <span className="font-medium">{weatherData.waveHeight} –º ‚Üí {(weatherData.waveHeight + Math.random() * 0.5).toFixed(1)} –º</span>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            ) : null}
          </div>

          {/* –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö */}
          <div className="text-center mt-6">
            <p className="text-sm text-gray-500">
              –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –∫–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç
            </p>
            <button
              onClick={() => window.location.reload()}
              className="mt-2 text-marine-600 hover:text-marine-700 text-sm font-medium transition-colors"
            >
              –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
            </button>
          </div>
        </div>
      </div>
    </section>
  )
}
