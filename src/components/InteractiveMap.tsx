'use client'

import { useState, useEffect } from 'react'

interface Port {
  id: string
  name: string
  coordinates: [number, number]
  type: 'major' | 'commercial' | 'fishing' | 'yacht'
  starlinkStatus: 'available' | 'coming-soon' | 'planned'
  description: string
  services: string[]
}

export default function InteractiveMap() {
  const [selectedPort, setSelectedPort] = useState<Port | null>(null)
  const [filter, setFilter] = useState<string>('all')
  const [isLoading, setIsLoading] = useState(true)

  const ports: Port[] = [
    {
      id: 'spb',
      name: '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥',
      coordinates: [59.9311, 30.3609],
      type: 'major',
      starlinkStatus: 'available',
      description: '–ö—Ä—É–ø–Ω–µ–π—à–∏–π –ø–æ—Ä—Ç –†–æ—Å—Å–∏–∏, –æ–±—Å–ª—É–∂–∏–≤–∞–µ—Ç –≤—Å–µ —Ç–∏–ø—ã —Å—É–¥–æ–≤',
      services: ['–ì—Ä—É–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏', '–ü–∞—Å—Å–∞–∂–∏—Ä—Å–∫–∏–µ –ø–µ—Ä–µ–≤–æ–∑–∫–∏', '–Ø—Ö—Ç–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å']
    },
    {
      id: 'murmansk',
      name: '–ú—É—Ä–º–∞–Ω—Å–∫',
      coordinates: [68.9585, 33.0827],
      type: 'commercial',
      starlinkStatus: 'available',
      description: '–ö—Ä—É–ø–Ω–µ–π—à–∏–π –ø–æ—Ä—Ç –∑–∞ –ü–æ–ª—è—Ä–Ω—ã–º –∫—Ä—É–≥–æ–º',
      services: ['–†—ã–±–æ–ª–æ–≤—Å—Ç–≤–æ', '–ì—Ä—É–∑–æ–≤—ã–µ –ø–µ—Ä–µ–≤–æ–∑–∫–∏', '–õ–µ–¥–æ–∫–æ–ª—å–Ω–∞—è –ø—Ä–æ–≤–æ–¥–∫–∞']
    },
    {
      id: 'novorossiysk',
      name: '–ù–æ–≤–æ—Ä–æ—Å—Å–∏–π—Å–∫',
      coordinates: [44.7235, 37.7686],
      type: 'major',
      starlinkStatus: 'available',
      description: '–ö—Ä—É–ø–Ω–µ–π—à–∏–π –ø–æ—Ä—Ç –ß–µ—Ä–Ω–æ–≥–æ –º–æ—Ä—è',
      services: ['–ù–µ—Ñ—Ç–µ–ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∞', '–ì—Ä—É–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏', '–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–∑–∫–∏']
    },
    {
      id: 'vladivostok',
      name: '–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫',
      coordinates: [43.1056, 131.8735],
      type: 'major',
      starlinkStatus: 'coming-soon',
      description: '–ì–ª–∞–≤–Ω—ã–π –ø–æ—Ä—Ç –î–∞–ª—å–Ω–µ–≥–æ –í–æ—Å—Ç–æ–∫–∞',
      services: ['–†—ã–±–æ–ª–æ–≤—Å—Ç–≤–æ', '–ì—Ä—É–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏', '–ü–∞—Å—Å–∞–∂–∏—Ä—Å–∫–∏–µ –ø–µ—Ä–µ–≤–æ–∑–∫–∏']
    },
    {
      id: 'kaliningrad',
      name: '–ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥',
      coordinates: [54.7065, 20.5110],
      type: 'commercial',
      starlinkStatus: 'available',
      description: '–ü–æ—Ä—Ç –≤ –ë–∞–ª—Ç–∏–π—Å–∫–æ–º –º–æ—Ä–µ',
      services: ['–ì—Ä—É–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏', '–Ø—Ö—Ç–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å', '–†—ã–±–æ–ª–æ–≤—Å—Ç–≤–æ']
    },
    {
      id: 'sochi',
      name: '–°–æ—á–∏',
      coordinates: [43.5855, 39.7231],
      type: 'yacht',
      starlinkStatus: 'available',
      description: '–ö—Ä—É–ø–Ω–µ–π—à–∏–π —è—Ö—Ç–µ–Ω–Ω—ã–π –ø–æ—Ä—Ç –†–æ—Å—Å–∏–∏',
      services: ['–Ø—Ö—Ç–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å', '–ü–∞—Å—Å–∞–∂–∏—Ä—Å–∫–∏–µ –ø–µ—Ä–µ–≤–æ–∑–∫–∏', '–¢—É—Ä–∏–∑–º']
    },
    {
      id: 'petropavlovsk',
      name: '–ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫-–ö–∞–º—á–∞—Ç—Å–∫–∏–π',
      coordinates: [53.0195, 158.6507],
      type: 'fishing',
      starlinkStatus: 'planned',
      description: '–¶–µ–Ω—Ç—Ä —Ä—ã–±–æ–ª–æ–≤—Å—Ç–≤–∞ –Ω–∞ –î–∞–ª—å–Ω–µ–º –í–æ—Å—Ç–æ–∫–µ',
      services: ['–†—ã–±–æ–ª–æ–≤—Å—Ç–≤–æ', '–ù–∞—É—á–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è', '–¢—É—Ä–∏–∑–º']
    },
    {
      id: 'arkhangelsk',
      name: '–ê—Ä—Ö–∞–Ω–≥–µ–ª—å—Å–∫',
      coordinates: [64.5401, 40.5433],
      type: 'commercial',
      starlinkStatus: 'available',
      description: '–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—Ç –Ω–∞ –ë–µ–ª–æ–º –º–æ—Ä–µ',
      services: ['–ì—Ä—É–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏', '–õ–µ—Å–æ–ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∞', '–ù–∞—É—á–Ω—ã–µ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏']
    }
  ]

  const filters = [
    { value: 'all', label: '–í—Å–µ –ø–æ—Ä—Ç—ã', icon: 'üåç' },
    { value: 'major', label: '–ö—Ä—É–ø–Ω—ã–µ –ø–æ—Ä—Ç—ã', icon: 'üè≠' },
    { value: 'commercial', label: '–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ', icon: 'üö¢' },
    { value: 'fishing', label: '–†—ã–±–æ–ª–æ–≤–Ω—ã–µ', icon: 'üêü' },
    { value: 'yacht', label: '–Ø—Ö—Ç–µ–Ω–Ω—ã–µ', icon: '‚õµ' }
  ]

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'available': return 'bg-green-500'
      case 'coming-soon': return 'bg-yellow-500'
      case 'planned': return 'bg-gray-400'
      default: return 'bg-gray-400'
    }
  }

  const getStatusText = (status: string) => {
    switch (status) {
      case 'available': return '–î–æ—Å—Ç—É–ø–Ω–æ'
      case 'coming-soon': return '–°–∫–æ—Ä–æ'
      case 'planned': return '–í –ø–ª–∞–Ω–∞—Ö'
      default: return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
    }
  }

  const filteredPorts = filter === 'all' ? ports : ports.filter(port => port.type === filter)

  useEffect(() => {
    setIsLoading(true)
    setTimeout(() => setIsLoading(false), 1000)
  }, [filter])

  return (
    <section className="section-padding bg-white">
      <div className="container-max">
        <div className="text-center mb-16">
          <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
            –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–∞ –ø–æ—Ä—Ç–æ–≤
          </h2>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            –ù–∞–π–¥–∏—Ç–µ –±–ª–∏–∂–∞–π—à–∏–π –ø–æ—Ä—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π Starlink –∏ —É–∑–Ω–∞–π—Ç–µ –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É—Å–ª—É–≥–∞—Ö
          </p>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {/* –§–∏–ª—å—Ç—Ä—ã */}
          <div className="lg:col-span-1">
            <div className="bg-gray-50 rounded-2xl p-6 sticky top-24">
              <h3 className="text-lg font-semibold text-gray-900 mb-4">
                –§–∏–ª—å—Ç—Ä—ã
              </h3>
              
              <div className="space-y-2">
                {filters.map((filterOption) => (
                  <button
                    key={filterOption.value}
                    onClick={() => setFilter(filterOption.value)}
                    className={`w-full flex items-center space-x-3 p-3 rounded-lg transition-colors ${
                      filter === filterOption.value
                        ? 'bg-marine-600 text-white'
                        : 'bg-white text-gray-700 hover:bg-gray-100'
                    }`}
                  >
                    <span className="text-xl">{filterOption.icon}</span>
                    <span className="font-medium">{filterOption.label}</span>
                  </button>
                ))}
              </div>

              {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
              <div className="mt-6 pt-6 border-t border-gray-200">
                <h4 className="font-semibold text-gray-900 mb-3">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h4>
                <div className="space-y-2 text-sm">
                  <div className="flex justify-between">
                    <span className="text-gray-600">–í—Å–µ–≥–æ –ø–æ—Ä—Ç–æ–≤:</span>
                    <span className="font-medium">{ports.length}</span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-gray-600">Starlink –¥–æ—Å—Ç—É–ø–µ–Ω:</span>
                    <span className="font-medium text-green-600">
                      {ports.filter(p => p.starlinkStatus === 'available').length}
                    </span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-gray-600">–°–∫–æ—Ä–æ –±—É–¥–µ—Ç:</span>
                    <span className="font-medium text-yellow-600">
                      {ports.filter(p => p.starlinkStatus === 'coming-soon').length}
                    </span>
                  </div>
                  <div className="flex justify-between">
                    <span className="text-gray-600">–í –ø–ª–∞–Ω–∞—Ö:</span>
                    <span className="font-medium text-gray-600">
                      {ports.filter(p => p.starlinkStatus === 'planned').length}
                    </span>
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* –ö–∞—Ä—Ç–∞ –∏ —Å–ø–∏—Å–æ–∫ –ø–æ—Ä—Ç–æ–≤ */}
          <div className="lg:col-span-2">
            {isLoading ? (
              <div className="bg-gray-100 rounded-2xl h-96 flex items-center justify-center">
                <div className="text-center">
                  <div className="inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-marine-600 mb-4"></div>
                  <p className="text-gray-600">–ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ä—Ç—É...</p>
                </div>
              </div>
            ) : (
              <div className="space-y-6">
                {/* –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –∫–∞—Ä—Ç–∞ */}
                <div className="bg-gradient-to-br from-blue-50 to-indigo-100 rounded-2xl p-8">
                  <div className="text-center mb-6">
                    <h3 className="text-xl font-semibold text-gray-900 mb-2">
                      –ú–æ—Ä—Å–∫–∏–µ –ø–æ—Ä—Ç—ã –†–æ—Å—Å–∏–∏
                    </h3>
                    <p className="text-gray-600">
                      –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π Starlink
                    </p>
                  </div>

                  {/* –°–µ—Ç–∫–∞ –ø–æ—Ä—Ç–æ–≤ */}
                  <div className="grid grid-cols-2 md:grid-cols-3 gap-4">
                    {filteredPorts.map((port) => (
                      <button
                        key={port.id}
                        onClick={() => setSelectedPort(port)}
                        className={`p-4 rounded-lg border-2 transition-all duration-200 ${
                          selectedPort?.id === port.id
                            ? 'border-marine-500 bg-marine-50'
                            : 'border-gray-200 hover:border-marine-300 hover:bg-gray-50'
                        }`}
                      >
                        <div className="flex items-center space-x-3 mb-2">
                          <div className={`w-3 h-3 rounded-full ${getStatusColor(port.starlinkStatus)}`}></div>
                          <h4 className="font-semibold text-gray-900 text-sm">
                            {port.name}
                          </h4>
                        </div>
                        <p className="text-xs text-gray-600 mb-2">
                          {port.description}
                        </p>
                        <div className="flex items-center justify-between">
                          <span className="text-xs text-gray-500">
                            {port.type === 'major' ? 'üè≠' : 
                             port.type === 'commercial' ? 'üö¢' :
                             port.type === 'fishing' ? 'üêü' : '‚õµ'}
                          </span>
                          <span className={`text-xs px-2 py-1 rounded-full ${
                            port.starlinkStatus === 'available' ? 'bg-green-100 text-green-800' :
                            port.starlinkStatus === 'coming-soon' ? 'bg-yellow-100 text-yellow-800' :
                            'bg-gray-100 text-gray-800'
                          }`}>
                            {getStatusText(port.starlinkStatus)}
                          </span>
                        </div>
                      </button>
                    ))}
                  </div>
                </div>

                {/* –î–µ—Ç–∞–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞ */}
                {selectedPort ? (
                  <div className="bg-white border border-gray-200 rounded-2xl p-6">
                    <div className="flex items-start justify-between mb-4">
                      <div>
                        <h3 className="text-2xl font-bold text-gray-900 mb-2">
                          {selectedPort.name}
                        </h3>
                        <p className="text-gray-600">
                          {selectedPort.description}
                        </p>
                      </div>
                      <div className="flex items-center space-x-2">
                        <div className={`w-4 h-4 rounded-full ${getStatusColor(selectedPort.starlinkStatus)}`}></div>
                        <span className={`px-3 py-1 rounded-full text-sm font-medium ${
                          selectedPort.starlinkStatus === 'available' ? 'bg-green-100 text-green-800' :
                          selectedPort.starlinkStatus === 'coming-soon' ? 'bg-yellow-100 text-yellow-800' :
                          'bg-gray-100 text-gray-800'
                        }`}>
                          {getStatusText(selectedPort.starlinkStatus)}
                        </span>
                      </div>
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                      <div>
                        <h4 className="font-semibold text-gray-900 mb-3">
                          –î–æ—Å—Ç—É–ø–Ω—ã–µ —É—Å–ª—É–≥–∏
                        </h4>
                        <ul className="space-y-2">
                          {selectedPort.services.map((service, index) => (
                            <li key={index} className="flex items-center space-x-2">
                              <svg className="w-4 h-4 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
                              </svg>
                              <span className="text-gray-700">{service}</span>
                            </li>
                          ))}
                        </ul>
                      </div>

                      <div>
                        <h4 className="font-semibold text-gray-900 mb-3">
                          –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Starlink
                        </h4>
                        <div className="space-y-3">
                          <div className="flex justify-between">
                            <span className="text-gray-600">–°—Ç–∞—Ç—É—Å:</span>
                            <span className="font-medium">{getStatusText(selectedPort.starlinkStatus)}</span>
                          </div>
                          <div className="flex justify-between">
                            <span className="text-gray-600">–¢–∏–ø –ø–æ—Ä—Ç–∞:</span>
                            <span className="font-medium">
                              {selectedPort.type === 'major' ? '–ö—Ä—É–ø–Ω—ã–π' :
                               selectedPort.type === 'commercial' ? '–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π' :
                               selectedPort.type === 'fishing' ? '–†—ã–±–æ–ª–æ–≤–Ω—ã–π' : '–Ø—Ö—Ç–µ–Ω–Ω—ã–π'}
                            </span>
                          </div>
                          <div className="flex justify-between">
                            <span className="text-gray-600">–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:</span>
                            <span className="font-medium text-sm">
                              {selectedPort.coordinates[0].toFixed(4)}, {selectedPort.coordinates[1].toFixed(4)}
                            </span>
                          </div>
                        </div>
                      </div>
                    </div>

                    <div className="mt-6 pt-6 border-t border-gray-200">
                      <div className="flex flex-col sm:flex-row gap-4">
                        <a href="/contact" className="btn-primary">
                          –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ—Ä—Ç–æ–º
                        </a>
                        <a href="/calculator" className="btn-secondary">
                          –†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å
                        </a>
                      </div>
                    </div>
                  </div>
                ) : (
                  <div className="bg-gray-50 rounded-2xl p-8 text-center">
                    <div className="text-6xl mb-4">üó∫Ô∏è</div>
                    <h3 className="text-xl font-semibold text-gray-900 mb-2">
                      –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ—Ä—Ç
                    </h3>
                    <p className="text-gray-600">
                      –ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –ª—é–±–æ–π –ø–æ—Ä—Ç –Ω–∞ –∫–∞—Ä—Ç–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
                    </p>
                  </div>
                )}
              </div>
            )}
          </div>
        </div>

        {/* CTA */}
        <div className="text-center mt-16">
          <h3 className="text-2xl font-bold text-gray-900 mb-4">
            –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å –≤—ã–±–æ—Ä–æ–º –ø–æ—Ä—Ç–∞?
          </h3>
          <p className="text-gray-600 mb-8 max-w-2xl mx-auto">
            –ù–∞—à–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –ø–æ–º–æ–≥—É—Ç –≤—ã–±—Ä–∞—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–π –ø–æ—Ä—Ç –¥–ª—è –≤–∞—à–µ–≥–æ —Å—É–¥–Ω–∞ –∏ –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É—é—Ç –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è Starlink
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <a href="/contact" className="btn-primary">
              –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
            </a>
            <a href="tel:+78001234567" className="btn-secondary">
              –ü–æ–∑–≤–æ–Ω–∏—Ç—å: +7 (800) 123-45-67
            </a>
          </div>
        </div>
      </div>
    </section>
  )
}
