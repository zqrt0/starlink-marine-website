'use client'

import { useState } from 'react'

interface CoverageArea {
  id: string
  name: string
  status: 'available' | 'coming-soon' | 'planned'
  description: string
  speed: string
  latency: string
}

export default function CoverageMap() {
  const [selectedArea, setSelectedArea] = useState<string | null>(null)

  const coverageAreas: CoverageArea[] = [
    {
      id: 'baltic',
      name: '–ë–∞–ª—Ç–∏–π—Å–∫–æ–µ –º–æ—Ä–µ',
      status: 'available',
      description: '–ü–æ–ª–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ Starlink –¥–æ—Å—Ç—É–ø–Ω–æ',
      speed: '100-200 –ú–±–∏—Ç/—Å',
      latency: '20-30 –º—Å'
    },
    {
      id: 'black',
      name: '–ß–µ—Ä–Ω–æ–µ –º–æ—Ä–µ',
      status: 'available',
      description: '–°—Ç–∞–±–∏–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –≤ –ø—Ä–∏–±—Ä–µ–∂–Ω—ã—Ö –∑–æ–Ω–∞—Ö',
      speed: '80-150 –ú–±–∏—Ç/—Å',
      latency: '25-35 –º—Å'
    },
    {
      id: 'white',
      name: '–ë–µ–ª–æ–µ –º–æ—Ä–µ',
      status: 'available',
      description: '–ü–æ–∫—Ä—ã—Ç–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥',
      speed: '60-120 –ú–±–∏—Ç/—Å',
      latency: '30-40 –º—Å'
    },
    {
      id: 'barents',
      name: '–ë–∞—Ä–µ–Ω—Ü–µ–≤–æ –º–æ—Ä–µ',
      status: 'coming-soon',
      description: '–ü–æ–∫—Ä—ã—Ç–∏–µ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è –∫ –∫–æ–Ω—Ü—É 2024 –≥–æ–¥–∞',
      speed: '50-100 –ú–±–∏—Ç/—Å',
      latency: '35-45 –º—Å'
    },
    {
      id: 'okhotsk',
      name: '–û—Ö–æ—Ç—Å–∫–æ–µ –º–æ—Ä–µ',
      status: 'planned',
      description: '–ü–æ–∫—Ä—ã—Ç–∏–µ –≤ –ø–ª–∞–Ω–∞—Ö –Ω–∞ 2025 –≥–æ–¥',
      speed: '40-80 –ú–±–∏—Ç/—Å',
      latency: '40-50 –º—Å'
    },
    {
      id: 'japan',
      name: '–Ø–ø–æ–Ω—Å–∫–æ–µ –º–æ—Ä–µ',
      status: 'planned',
      description: '–ü–æ–∫—Ä—ã—Ç–∏–µ –≤ –ø–ª–∞–Ω–∞—Ö –Ω–∞ 2025 –≥–æ–¥',
      speed: '40-80 –ú–±–∏—Ç/—Å',
      latency: '40-50 –º—Å'
    }
  ]

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'available':
        return 'bg-green-500'
      case 'coming-soon':
        return 'bg-yellow-500'
      case 'planned':
        return 'bg-gray-400'
      default:
        return 'bg-gray-400'
    }
  }

  const getStatusText = (status: string) => {
    switch (status) {
      case 'available':
        return '–î–æ—Å—Ç—É–ø–Ω–æ'
      case 'coming-soon':
        return '–°–∫–æ—Ä–æ'
      case 'planned':
        return '–í –ø–ª–∞–Ω–∞—Ö'
      default:
        return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
    }
  }

  return (
    <section className="section-padding bg-white">
      <div className="container-max">
        <div className="text-center mb-16">
          <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
            –ö–∞—Ä—Ç–∞ –ø–æ–∫—Ä—ã—Ç–∏—è Starlink
          </h2>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            –£–∑–Ω–∞–π—Ç–µ, –≥–¥–µ –¥–æ—Å—Ç—É–ø–µ–Ω –≤—ã—Å–æ–∫–æ—Å–∫–æ—Ä–æ—Å—Ç–Ω–æ–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç Starlink –¥–ª—è –º–æ—Ä—Å–∫–∏—Ö —Å—É–¥–æ–≤
          </p>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-12">
          {/* Map visualization */}
          <div className="relative">
            <div className="bg-gradient-to-br from-marine-50 to-ocean-50 rounded-2xl p-8 h-full">
              <div className="text-center mb-8">
                <h3 className="text-2xl font-bold text-gray-900 mb-2">
                  –ú–æ—Ä—Å–∫–∏–µ —Ä–µ–≥–∏–æ–Ω—ã –†–æ—Å—Å–∏–∏
                </h3>
                <p className="text-gray-600">
                  –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–∞ –ø–æ–∫—Ä—ã—Ç–∏—è
                </p>
              </div>

              {/* Simplified map representation */}
              <div className="relative bg-white rounded-xl p-6 shadow-lg">
                <div className="grid grid-cols-2 gap-4">
                  {coverageAreas.map((area) => (
                    <button
                      key={area.id}
                      onClick={() => setSelectedArea(selectedArea === area.id ? null : area.id)}
                      className={`p-4 rounded-lg border-2 transition-all duration-200 ${
                        selectedArea === area.id
                          ? 'border-marine-500 bg-marine-50'
                          : 'border-gray-200 hover:border-marine-300 hover:bg-gray-50'
                      }`}
                    >
                      <div className="flex items-center space-x-3 mb-2">
                        <div className={`w-3 h-3 rounded-full ${getStatusColor(area.status)}`}></div>
                        <h4 className="font-semibold text-gray-900 text-sm">
                          {area.name}
                        </h4>
                      </div>
                      <p className="text-xs text-gray-600">
                        {getStatusText(area.status)}
                      </p>
                    </button>
                  ))}
                </div>
              </div>

              {/* Legend */}
              <div className="mt-6 flex flex-wrap justify-center gap-4">
                <div className="flex items-center space-x-2">
                  <div className="w-3 h-3 rounded-full bg-green-500"></div>
                  <span className="text-sm text-gray-600">–î–æ—Å—Ç—É–ø–Ω–æ</span>
                </div>
                <div className="flex items-center space-x-2">
                  <div className="w-3 h-3 rounded-full bg-yellow-500"></div>
                  <span className="text-sm text-gray-600">–°–∫–æ—Ä–æ</span>
                </div>
                <div className="flex items-center space-x-2">
                  <div className="w-3 h-3 rounded-full bg-gray-400"></div>
                  <span className="text-sm text-gray-600">–í –ø–ª–∞–Ω–∞—Ö</span>
                </div>
              </div>
            </div>
          </div>

          {/* Area details */}
          <div className="space-y-6">
            {selectedArea ? (
              <div className="bg-gradient-to-br from-marine-50 to-ocean-50 rounded-2xl p-8">
                {(() => {
                  const area = coverageAreas.find(a => a.id === selectedArea)
                  if (!area) return null
                  
                  return (
                    <>
                      <div className="flex items-center space-x-4 mb-6">
                        <div className={`w-4 h-4 rounded-full ${getStatusColor(area.status)}`}></div>
                        <h3 className="text-2xl font-bold text-gray-900">
                          {area.name}
                        </h3>
                      </div>
                      
                      <p className="text-gray-600 mb-6">
                        {area.description}
                      </p>
                      
                      <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
                        <div className="bg-white rounded-lg p-4">
                          <h4 className="font-semibold text-gray-900 mb-2">–°–∫–æ—Ä–æ—Å—Ç—å</h4>
                          <p className="text-marine-600 font-medium">{area.speed}</p>
                        </div>
                        <div className="bg-white rounded-lg p-4">
                          <h4 className="font-semibold text-gray-900 mb-2">–ó–∞–¥–µ—Ä–∂–∫–∞</h4>
                          <p className="text-marine-600 font-medium">{area.latency}</p>
                        </div>
                      </div>
                      
                      <div className="mt-6">
                        <span className={`inline-block px-3 py-1 rounded-full text-sm font-medium ${
                          area.status === 'available' 
                            ? 'bg-green-100 text-green-800'
                            : area.status === 'coming-soon'
                            ? 'bg-yellow-100 text-yellow-800'
                            : 'bg-gray-100 text-gray-800'
                        }`}>
                          {getStatusText(area.status)}
                        </span>
                      </div>
                    </>
                  )
                })()}
              </div>
            ) : (
              <div className="bg-gray-50 rounded-2xl p-8 text-center">
                <div className="text-6xl mb-4">üó∫Ô∏è</div>
                <h3 className="text-xl font-semibold text-gray-900 mb-2">
                  –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–≥–∏–æ–Ω
                </h3>
                <p className="text-gray-600">
                  –ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –ª—é–±–æ–π —Ä–µ–≥–∏–æ–Ω –Ω–∞ –∫–∞—Ä—Ç–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ –ø–æ–∫—Ä—ã—Ç–∏–∏
                </p>
              </div>
            )}

            {/* Global coverage info */}
            <div className="bg-white rounded-2xl p-6 shadow-lg">
              <h3 className="text-lg font-semibold text-gray-900 mb-4">
                –ì–ª–æ–±–∞–ª—å–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ
              </h3>
              <div className="space-y-3">
                <div className="flex justify-between items-center">
                  <span className="text-gray-600">–í—Å–µ–≥–æ —Å–ø—É—Ç–Ω–∏–∫–æ–≤</span>
                  <span className="font-semibold text-gray-900">4,000+</span>
                </div>
                <div className="flex justify-between items-center">
                  <span className="text-gray-600">–°—Ç—Ä–∞–Ω—ã –ø–æ–∫—Ä—ã—Ç–∏—è</span>
                  <span className="font-semibold text-gray-900">60+</span>
                </div>
                <div className="flex justify-between items-center">
                  <span className="text-gray-600">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</span>
                  <span className="font-semibold text-gray-900">2M+</span>
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* CTA */}
        <div className="text-center mt-16">
          <h3 className="text-2xl font-bold text-gray-900 mb-4">
            –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–∫—Ä—ã—Ç–∏–µ –¥–ª—è –≤–∞—à–µ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞
          </h3>
          <p className="text-gray-600 mb-8 max-w-2xl mx-auto">
            –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–∫—Ä—ã—Ç–∏–∏ –Ω–∞ –≤–∞—à–∏—Ö –º–∞—Ä—à—Ä—É—Ç–∞—Ö
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <a href="/contact" className="btn-primary">
              –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–∫—Ä—ã—Ç–∏–µ
            </a>
            <a href="/pricing" className="btn-secondary">
              –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–∞—Ä–∏—Ñ—ã
            </a>
          </div>
        </div>
      </div>
    </section>
  )
}
