import { NextRequest, NextResponse } from 'next/server'

interface TelegramMessage {
  message_id: number
  from: {
    id: number
    is_bot: boolean
    first_name: string
    username?: string
  }
  chat: {
    id: number
    type: string
  }
  date: number
  text?: string
}

interface TelegramUpdate {
  update_id: number
  message: TelegramMessage
}

export async function POST(request: NextRequest) {
  try {
    const update: TelegramUpdate = await request.json()
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if (!update.message) {
      return NextResponse.json({ ok: true })
    }

    const message = update.message
    const chatId = message.chat.id
    const text = message.text || ''
    const firstName = message.from.first_name

    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
    const botToken = process.env.TELEGRAM_BOT_TOKEN
    if (!botToken) {
      console.error('TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')
      return NextResponse.json({ error: 'Bot token not configured' }, { status: 500 })
    }

    let responseText = ''

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
    if (text.startsWith('/start')) {
      responseText = `üö¢ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Starlink Marine, ${firstName}!

üåä –ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –≤—ã—Å–æ–∫–æ—Å–∫–æ—Ä–æ—Å—Ç–Ω–æ–π —Å–ø—É—Ç–Ω–∏–∫–æ–≤—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –¥–ª—è –º–æ—Ä—Å–∫–∏—Ö —Å—É–¥–æ–≤.

üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/help - –ø–æ–º–æ—â—å
/contact - —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏
/website - –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç

üí¨ –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.`

    } else if (text.startsWith('/help')) {
      responseText = `üÜò –ü–æ–º–æ—â—å –ø–æ Starlink Marine

üìû –°–≤—è–∑—å —Å –Ω–∞–º–∏:
‚Ä¢ Email: info@starlink-marine.com
‚Ä¢ –°–∞–π—Ç: https://starlink-marine-website.vercel.app

üö¢ –ù–∞—à–∏ —É—Å–ª—É–≥–∏:
‚Ä¢ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ Starlink –¥–ª—è —è—Ö—Ç
‚Ä¢ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç –¥–ª—è —Ä—ã–±–æ–ª–æ–≤–Ω—ã—Ö —Å—É–¥–æ–≤
‚Ä¢ –°–≤—è–∑—å –¥–ª—è –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö —Å—É–¥–æ–≤
‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7

üí¨ –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –∏ –º—ã –æ—Ç–≤–µ—Ç–∏–º –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤!`

    } else if (text.startsWith('/contact')) {
      responseText = `üìû –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è

üåê –°–∞–π—Ç: https://starlink-marine-website.vercel.app
üìß Email: info@starlink-marine.com
ü§ñ –≠—Ç–æ—Ç –±–æ—Ç: @starlinkmarine_bot

üìù –î–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏:
1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –Ω–∞—à —Å–∞–π—Ç
2. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
3. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤

üí¨ –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –∑–¥–µ—Å—å!`

    } else if (text.startsWith('/website')) {
      responseText = `üåê –ù–∞—à —Å–∞–π—Ç: https://starlink-marine-website.vercel.app

üìã –ù–∞ —Å–∞–π—Ç–µ –≤—ã –º–æ–∂–µ—Ç–µ:
‚Ä¢ –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
‚Ä¢ –£–∑–Ω–∞—Ç—å –æ —Ç–∞—Ä–∏—Ñ–∞—Ö
‚Ä¢ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–æ–∫
‚Ä¢ –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏

üí¨ –ò–ª–∏ –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –ø—Ä—è–º–æ –∑–¥–µ—Å—å!`

    } else if (text.toLowerCase().includes('–ø—Ä–∏–≤–µ—Ç') || text.toLowerCase().includes('hello')) {
      responseText = `üëã –ü—Ä–∏–≤–µ—Ç, ${firstName}!

–†–∞–¥ –≤–∞—Å –≤–∏–¥–µ—Ç—å! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º Starlink –¥–ª—è –≤–∞—à–µ–≥–æ —Å—É–¥–Ω–∞?

üö¢ –£ –Ω–∞—Å –µ—Å—Ç—å —Ä–µ—à–µ–Ω–∏—è –¥–ª—è:
‚Ä¢ –ß–∞—Å—Ç–Ω—ã—Ö —è—Ö—Ç
‚Ä¢ –†—ã–±–æ–ª–æ–≤–Ω—ã—Ö —Å—É–¥–æ–≤  
‚Ä¢ –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö —Å—É–¥–æ–≤
‚Ä¢ –ì—Ä—É–∑–æ–≤—ã—Ö —Å—É–¥–æ–≤

üí¨ –û–ø–∏—à–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å, –∏ —è –ø–æ–º–æ–≥—É!`

    } else if (text.toLowerCase().includes('—Ü–µ–Ω–∞') || text.toLowerCase().includes('—Å—Ç–æ–∏–º–æ—Å—Ç—å') || text.toLowerCase().includes('—Ç–∞—Ä–∏—Ñ')) {
      responseText = `üí∞ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–∞—Ä–∏—Ñ–∞—Ö

üìä –°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–∏–ø–∞ —Å—É–¥–Ω–∞ –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π:
‚Ä¢ –Ø—Ö—Ç—ã –∏ –∫–∞—Ç–µ—Ä–∞
‚Ä¢ –†—ã–±–æ–ª–æ–≤–Ω—ã–µ —Å—É–¥–∞
‚Ä¢ –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ —Å—É–¥–∞
‚Ä¢ –ì—Ä—É–∑–æ–≤—ã–µ —Å—É–¥–∞

üìù –î–ª—è —Ç–æ—á–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞:
1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç: https://starlink-marine-website.vercel.app
2. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É —Å –≤–∞—à–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏
3. –ú—ã —Ä–∞—Å—Å—á–∏—Ç–∞–µ–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å

üí¨ –ò–ª–∏ –æ–ø–∏—à–∏—Ç–µ –≤–∞—à —Ç–∏–ø —Å—É–¥–Ω–∞, –∏ —è –¥–∞–º –ø—Ä–∏–º–µ—Ä–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é!`

    } else if (text.toLowerCase().includes('—É—Å—Ç–∞–Ω–æ–≤–∫–∞') || text.toLowerCase().includes('–º–æ–Ω—Ç–∞–∂')) {
      responseText = `üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Starlink

‚ö° –ü—Ä–æ—Ü–µ—Å—Å —É—Å—Ç–∞–Ω–æ–≤–∫–∏:
‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –∏ —Ä–∞—Å—á–µ—Ç
‚Ä¢ –î–æ—Å—Ç–∞–≤–∫–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –º–æ–Ω—Ç–∞–∂ (4-8 —á–∞—Å–æ–≤)
‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
‚Ä¢ –û–±—É—á–µ–Ω–∏–µ —ç–∫–∏–ø–∞–∂–∞

üõ†Ô∏è –ß—Ç–æ –≤—Ö–æ–¥–∏—Ç –≤ —É—Å—Ç–∞–Ω–æ–≤–∫—É:
‚Ä¢ –°–ø—É—Ç–Ω–∏–∫–æ–≤–∞—è –∞–Ω—Ç–µ–Ω–Ω–∞
‚Ä¢ –ú–æ–¥–µ–º –∏ —Ä–æ—É—Ç–µ—Ä
‚Ä¢ –ö–∞–±–µ–ª–∏ –∏ –∫—Ä–µ–ø–ª–µ–Ω–∏—è
‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ç–∏
‚Ä¢ –ì–∞—Ä–∞–Ω—Ç–∏—è –Ω–∞ —Ä–∞–±–æ—Ç—ã

üìù –î–ª—è –∑–∞–∫–∞–∑–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –Ω–∞ —Å–∞–π—Ç–µ!`

    } else {
      // –û–±—â–∏–π –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç –Ω–∞ –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
      responseText = `üí¨ –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, ${firstName}!

üìã –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à –∑–∞–ø—Ä–æ—Å –∏ –æ—Ç–≤–µ—Ç–∏–º –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.

üåê –î–ª—è –±—ã—Å—Ç—Ä–æ–π –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏:
https://starlink-marine-website.vercel.app/contact

üìû –ò–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏:
üìß info@starlink-marine.com

üö¢ Starlink Marine - –Ω–∞–¥–µ–∂–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –≤ –º–æ—Ä–µ!`
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    const telegramResponse = await fetch(
      `https://api.telegram.org/bot${botToken}/sendMessage`,
      {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          chat_id: chatId,
          text: responseText,
          parse_mode: 'HTML',
        }),
      }
    )

    if (!telegramResponse.ok) {
      const errorData = await telegramResponse.json()
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ –≤ Telegram:', errorData)
    }

    return NextResponse.json({ ok: true })

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook:', error)
    return NextResponse.json({ error: 'Internal server error' }, { status: 500 })
  }
}
